MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-101.pkl"
  RESNETS:
    DEPTH: 101
  META_ARCHITECTURE: "RetinaNet"
  BACKBONE:
    NAME: "build_retinanet_resnet_fpn_backbone"
  RESNETS:
    OUT_FEATURES: ["res3", "res4", "res5"]
  ANCHOR_GENERATOR:
    SIZES: !!python/object/apply:eval ["[[x, x * 2**(1.0/3), x * 2**(2.0/3) ] for x in [32, 64, 128, 256, 512 ]]"]
  FPN:
    IN_FEATURES: ["res3", "res4", "res5"]
  RETINANET:
    IOU_THRESHOLDS: [0.4, 0.5]
    IOU_LABELS: [0, -1, 1]
    SMOOTH_L1_LOSS_BETA: 0.0
  ROI_HEADS:
    NUM_CLASSES: 20
DATASETS:
  TRAIN: ("fathomnet_train",)
  TEST: ("fathomnet_val",)
SOLVER:
  IMS_PER_BATCH: 4
  BASE_LR: 0.001  # Note that RetinaNet uses a different default learning rate
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  STEPS: (108000, 216000, 324000)
  MAX_ITER: 432000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 5000
  WARMUP_METHOD: linear
  GAMMA: 0.1
INPUT:
  MIN_SIZE_TRAIN: (640, 720, 800)
  MAX_SIZE_TRAIN: 1422
  MIN_SIZE_TEST: 720
  MAX_SIZE_TEST: 1280
VERSION: 2
TEST:
  AUG:
    MIN_SIZES: (640, 720, 800)
    MAX_SIZE: 1422
  DETECTIONS_PER_IMAGE: 300
